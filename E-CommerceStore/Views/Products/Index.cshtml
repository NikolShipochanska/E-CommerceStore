@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<E_CommerceStore.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<form method="get" asp-action="Index" class="mb-4">
    <div class="row">
        <div class="col-md-4">
            <select name="categoryId" class="form-select" onchange="this.form.submit()">
                <option value="">-- All Categories --</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.Id"
                    selected="@(ViewBag.SelectedCategoryId != null && (int)ViewBag.SelectedCategoryId == category.Id)">
                        @category.Name
                    </option>
                }
            </select>
        </div>
    </div>
</form>

@if (SignInManager.IsSignedIn(User))
{
    var currentUser = await UserManager.GetUserAsync(User);
    if (await UserManager.IsInRoleAsync(currentUser, "Admin"))
    {
        <p>
            <a asp-action="Create" class="btn btn-success">Create New</a>
        </p>
    }
}


<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var product in Model)
    {
        <div class="col">
            <div class="card h-100 shadow-sm">
                @if (!string.IsNullOrEmpty(product.ImageFileName))
                {
                    <img src="@product.ImageFileName" class="card-img-top" alt="@product.Name" style="height:200px; object-fit:cover;" />
                }
                else
                {
                    <div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height:200px;">
                        <span class="text-muted">No image</span>
                    </div>
                }

                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                </div>

                <div class="card-footer d-flex justify-content-between align-items-start">
                    <div class="d-flex flex-column">
                        <span class="fw-bold">@product.Price.ToString("C")</span>
                        <span class="fw-bold">Available quantity: @product.StockQuantity</span>
                    </div>

                    <div class="d-flex flex-column align-items-end">
                        <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-primary btn-sm mb-2">View</a>

                        <form asp-controller="ShoppingCarts" asp-action="AddToCart" method="post">
                            <input type="hidden" name="productId" value="@product.Id" />
                            <div class="input-group input-group-sm">
                                <input type="number" name="quantity" value="1" min="1" max="@product.StockQuantity"
                                       class="form-control text-center" style="max-width: 60px;" />
                                <button type="submit" class="btn btn-primary btn-sm">Add To Cart</button>
                            </div>
                        </form>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            var currentUser = await UserManager.GetUserAsync(User);
                            if (await UserManager.IsInRoleAsync(currentUser, "Admin"))
                            {
                                <a asp-action="Edit" asp-route-id="@product.Id" class="btn btn-secondary btn-sm">Edit</a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
